%h1 Edit your profile, #{@user.name}

.row
  = form_for @user, :url => profile_path do |f|
    .origin.col-md-6
      %h2 Origin

      #origin_map
      :javascript

        $("#origin_map").css("width", "500px");
        $("#origin_map").css("height", "300px");

        window.origin_map = L.map('origin_map', {minZoom: 3}).setView([51,0], 10);
        window.origin_map.attributionControl.setPrefix(false);
        L.mapbox.tileLayer('infovore.he83klmi').addTo(window.origin_map);

      - if @user.origin?
        :javascript
          window.origin_marker = L.marker([#{@user.origin_location.latlng_string}], {draggable: true}).addTo(window.origin_map);
          window.origin_marker.on("dragend", function(e) {
            var lat = this.getLatLng().lat;
            var lng = this.getLatLng().lng;
            $("#origin_location_latlng_string").val(lat + "," + lng);
          });
          window.origin_map.setView([#{@user.origin_location.latlng_string}], 10);
      - else
        :javascript
          window.origin_marker = L.marker([51,0], {draggable: true}).addTo(window.origin_map);
          window.origin_marker.on("dragend", function(e) {
            var lat = this.getLatLng().lat;
            var lng = this.getLatLng().lng;
            $("#user_origin_latlng").val(lat + "," + lng);
          });

      = fields_for :origin_location do |l|
        %p
          = l.label :latlng_string, "Latitude/Longitude"
          = l.text_field :latlng_string, :value => current_user.try(:origin_location).try(:latlng_string)

        %p
          = l.label :name
          = l.text_field :name, :value => current_user.try(:origin_location).try(:name)
          = link_to "Look this up on the map", "#", :class => :geocode_origin
        
        :javascript
          $("a.geocode_origin").click(function() {
            var address = $("#origin_location_name").val();
            $.getJSON('http://open.mapquestapi.com/nominatim/v1/search.php?format=json&limit=5&q=' + address + '&json_callback=?', 'jsonp', function(data) {
              console.log(data);
              if(data.length > 0) {
                var location = data[0]
                // move map to data.lat, data.lon
                window.origin_map.panTo([location.lat, location.lon]);
                // move marker to data.lat, data.lon
                window.origin_marker.setLatLng([location.lat,location.lon]);
                // update field
                $("#origin_location_latlng_string").val(location.lat+","+location.lon);
              } else {
                alert("Sorry, couldn't find that.");
              }
            });
            return false;
          });

    .offset.col-md-6
      %h2 Offset

      #offset_map
      :javascript

        $("#offset_map").css("width", "500px");
        $("#offset_map").css("height", "300px");

        window.offset_map = L.map('offset_map', {minZoom: 3}).setView([51,0], 10);
        window.offset_map.attributionControl.setPrefix(false);
        L.mapbox.tileLayer('infovore.he83klmi').addTo(window.offset_map);

      - if @user.offset_location
        :javascript
          window.offset_marker = L.marker([#{@user.offset_location.latlng_string}], {draggable: true}).addTo(window.offset_map);
          window.offset_marker.on("dragend", function(e) {
            var lat = this.getLatLng().lat;
            var lng = this.getLatLng().lng;
            $("#offset_location_latlng_string").val(lat + "," + lng);
          });
          window.offset_map.setView([#{@user.offset_location.latlng_string}], 10);
      - else
        :javascript
          window.offset_marker = L.marker([51,0], {draggable: true}).addTo(window.offset_map);
          window.offset_marker.on("dragend", function(e) {
            var lat = this.getLatLng().lat;
            var lng = this.getLatLng().lng;
            $("#offset_location_latlng_string").val(lat + "," + lng);
          });


      = fields_for :offset_location do |l|
        %p
          = l.label :latlng_string, "Latitude/Longitude"
          = l.text_field :latlng_string, :value => current_user.try(:offset_location).try(:latlng_string)

        %p
          = l.label :name
          = l.text_field :name, :value => current_user.try(:offset_location).try(:name)
          = link_to "Look this up on the map", "#", :class => :geocode_offset
        %p
          = l.label :time_offset
          = l.text_field :time_offset, :value => current_user.try(:offset_location).try(:time_offset)
          %span.note Offset from GMT in hours. For instance, NY is "-5"

      :javascript
        $("a.geocode_offset").click(function() {
          var address = $("#offset_location_name").val();
          $.getJSON('http://open.mapquestapi.com/nominatim/v1/search.php?format=json&limit=5&q=' + address + '&json_callback=?', 'jsonp', function(data) {
            console.log(data);
            if(data.length > 0) {
              var location = data[0]
              // move map to data.lat, data.lon
              window.offset_map.panTo([location.lat, location.lon]);
              // move marker to data.lat, data.lon
              window.offset_marker.setLatLng([location.lat,location.lon]);
              // update field
              $("#offset_location_latlng_string").val(location.lat+","+location.lon);
            } else {
              alert("Sorry, couldn't find that.");
            }
          });
          return false;
        });

    %p
      = f.submit
